{
  "class_name": "AnalyticsRepository",
  "table": "sales",
  "summary": "Menyediakan metode untuk agregasi dan analisis data penjualan.",
  "description": "Repositori ini tidak mengelola entitas tunggal, melainkan melakukan kueri kompleks terhadap tabel `sales` dan `media_packages` untuk menghasilkan statistik dan ringkasan analitik, seperti total pendapatan, penjualan harian, dan produk terlaris.",
  "methods": [
    {
      "name": "__construct",
      "description": "Menginisialisasi repositori dengan koneksi PDO.",
      "parameters": [{"name": "pdo", "type": "PDO", "description": "Objek koneksi database."}]
    },
    {
      "name": "getSellerStats",
      "description": "Menghitung total item terjual dan total pendapatan untuk seorang penjual.",
      "parameters": [{"name": "seller_user_id", "type": "int", "description": "ID internal pengguna penjual."}],
      "logic": "`SELECT COUNT(id) as total_sales, SUM(price) as total_revenue FROM sales WHERE seller_user_id = ?`",
      "returns": "array",
      "return_description": "Array dengan kunci `total_sales` dan `total_revenue`."
    },
    {
      "name": "getSalesByDay",
      "description": "Mengambil data penjualan harian untuk grafik atau laporan.",
      "parameters": [
        {"name": "seller_user_id", "type": "?int", "description": "Filter berdasarkan ID penjual (opsional)."},
        {"name": "days", "type": "int", "description": "Jumlah hari ke belakang (default 30)."}
      ],
      "logic": "`SELECT DATE(sale_date) as sales_date, SUM(price) as daily_revenue FROM sales WHERE sale_date >= NOW() - INTERVAL ? DAY GROUP BY DATE(sale_date)`",
      "returns": "array",
      "return_description": "Array dari objek yang berisi `sales_date` dan `daily_revenue`."
    }
  ],
  "notes": "Metode lain seperti `getTopSellingPackages` dan `getSummaryForPackage` juga ada tetapi mengikuti pola kueri agregat serupa pada tabel `sales` dan `media_packages`."
}