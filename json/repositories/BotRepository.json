{
  "class_name": "BotRepository",
  "table": "bots",
  "summary": "Mengelola data dan pengaturan untuk setiap bot.",
  "description": "Repositori ini bertanggung jawab untuk semua operasi CRUD (Create, Read, Update, Delete) yang berkaitan dengan entitas bot di tabel `bots`. Ini termasuk mencari bot berdasarkan berbagai kriteria seperti ID, username, atau fitur yang ditugaskan.",
  "methods": [
    {
      "name": "__construct",
      "description": "Menginisialisasi repositori dengan koneksi PDO.",
      "parameters": [{"name": "pdo", "type": "PDO", "description": "Objek koneksi database."}]
    },
    {
      "name": "findBotByTelegramId",
      "description": "Mencari satu bot berdasarkan ID Telegram uniknya.",
      "parameters": [{"name": "bot_id", "type": "int", "description": "ID Telegram bot."}],
      "logic": "`SELECT * FROM bots WHERE telegram_id = ?`",
      "returns": "array|false",
      "return_description": "Data bot jika ditemukan, jika tidak `false`."
    },
    {
      "name": "findBotByFeature",
      "description": "Mencari bot pertama yang cocok dengan fitur yang diberikan. Berguna untuk menemukan bot fungsional (misalnya, bot untuk fitur 'rate').",
      "parameters": [{"name": "feature", "type": "string", "description": "Nama fitur yang dicari (misalnya, 'sell', 'rate')."}],
      "logic": "`SELECT * FROM bots WHERE assigned_feature = ? LIMIT 1`",
      "returns": "array|false",
      "return_description": "Data bot jika ditemukan, jika tidak `false`."
    },
    {
      "name": "findByUsername",
      "description": "Mencari satu bot berdasarkan username-nya (tanpa @).",
      "parameters": [{"name": "username", "type": "string", "description": "Username bot."}],
      "logic": "`SELECT * FROM bots WHERE username = ?`",
      "returns": "array|false",
      "return_description": "Data bot jika ditemukan, jika tidak `false`."
    }
  ]
}