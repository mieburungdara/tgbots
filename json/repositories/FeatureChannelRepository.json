{
  "class_name": "FeatureChannelRepository",
  "table": "feature_channels",
  "summary": "Mengelola channel yang ditugaskan untuk fitur tertentu.",
  "description": "Repositori ini mengelola tabel `feature_channels`, yang mendefinisikan channel mana yang digunakan untuk fitur spesifik (misalnya, channel untuk memposting konten `sell`, channel untuk moderasi `rate`, dll.), baik untuk sistem secara umum maupun untuk pengguna tertentu.",
  "methods": [
    {
      "name": "__construct",
      "description": "Menginisialisasi repositori dengan koneksi PDO.",
      "parameters": [{"name": "pdo", "type": "PDO", "description": "Objek koneksi database."}]
    },
    {
      "name": "findAllByOwnerAndFeature",
      "description": "Mencari semua channel yang dimiliki oleh seorang pengguna untuk fitur tertentu.",
      "parameters": [
        {"name": "owner_user_id", "type": "int", "description": "ID internal pengguna."}, 
        {"name": "feature_type", "type": "string", "description": "Tipe fitur (misalnya, 'sell')."}
      ],
      "logic": "`SELECT * FROM feature_channels WHERE owner_user_id = ? AND feature_type = ?`",
      "returns": "array",
      "return_description": "Daftar channel yang cocok."
    },
    {
      "name": "findSystemChannelByFeature",
      "description": "Mencari channel sistem (yang tidak dimiliki oleh pengguna spesifik) untuk sebuah fitur.",
      "parameters": [{"name": "feature_type", "type": "string", "description": "Tipe fitur (misalnya, 'moderation')."}],
      "logic": "`SELECT * FROM feature_channels WHERE owner_user_id IS NULL AND feature_type = ?`",
      "returns": "array|false",
      "return_description": "Data channel jika ditemukan, jika tidak `false`."
    }
  ],
  "notes": "Repositori ini juga berisi metode CRUD standar seperti `find`, `findAll`, `create`, `update`, dan `delete`."
}