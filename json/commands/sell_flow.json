{
  "flow_name": "/sell",
  "summary": "Memulai dan menyelesaikan alur penjualan dengan konfirmasi.",
  "description": "Alur ini memandu pengguna melalui validasi, penetapan harga (langsung atau via prompt), konfirmasi, pembuatan paket, dan backup media. Alur ini menggunakan state `awaiting_price` hanya jika harga tidak diberikan di awal.",
  "phases": [
    {
      "phase_number": 1,
      "phase_name": "Inisiasi dan Validasi Perintah",
      "trigger": "Pengguna me-reply media dengan `/sell` atau `/sell <harga>`.",
      "handler": "`SellCommand.php`",
      "steps": [
        {
          "step": 1.1,
          "name": "Validasi Prasyarat",
          "description": "Memvalidasi bahwa fitur aktif, ini adalah reply ke media, dan pengguna adalah penjual terdaftar (jika tidak, memicu sub-alur pendaftaran)."
        },
        {
          "step": 1.2,
          "name": "Pengecekan Parameter Harga",
          "description": "Memeriksa apakah perintah menyertakan parameter harga yang valid (`/sell <harga>`).",
          "branching": {
            "condition": "Harga valid ada.",
            "if_true": {
              "action": "Langsung lompat ke **Fase 3** (Pengiriman Pesan Konfirmasi).",
              "description": "Melewati state `awaiting_price`."
            },
            "if_false": {
              "action": "Lanjut ke langkah berikutnya (masuk ke state `awaiting_price`)."
            }
          }
        },
        {
          "step": 1.3,
          "name": "Transisi State (Alur Normal)",
          "description": "Jika tidak ada harga, `UserRepository::setUserState()` dipanggil untuk mengubah state pengguna menjadi `awaiting_price` dan bot meminta input harga."
        }
      ]
    },
    {
      "phase_number": 2,
      "phase_name": "Penanganan Input Harga (Stateful)",
      "trigger": "Pengguna (dalam state `awaiting_price`) mengirim pesan harga.",
      "handler": "`AwaitingPriceState.php`",
      "steps": [
        {
          "step": 2.1,
          "name": "Validasi Input Harga",
          "description": "Memeriksa apakah pesan adalah angka integer positif."
        },
        {
          "step": 2.2,
          "name": "Reset State & Lanjut ke Konfirmasi",
          "description": "State pengguna direset ke `null`, kemudian alur dilanjutkan ke **Fase 3**."
        }
      ]
    },
    {
      "phase_number": 3,
      "phase_name": "Pengiriman Pesan Konfirmasi",
      "trigger": "Setelah harga divalidasi (baik dari Fase 1 atau 2).",
      "handler": "`AwaitingPriceState::sendConfirmationMessage()`",
      "action": "Sebuah pesan ringkasan dikirim ke pengguna, berisi harga dan tombol `✅ Konfirmasi & Jual` serta `❌ Batal`. Tombol konfirmasi berisi callback `sell_confirm_` dengan data terenkode (harga, message_id, chat_id)."
    },
    {
      "phase_number": 4,
      "phase_name": "Finalisasi Penjualan",
      "trigger": "Pengguna menekan tombol `✅ Konfirmasi & Jual`.",
      "handler": "`SellConfirmCallback.php`",
      "steps": [
        {
          "step": 4.1,
          "name": "Eksekusi Inti (dalam Transaksi)",
          "description": "Semua operasi database berat dijalankan di sini:",
          "database_actions": [
            "`MediaPackageRepository::createPackageWithPublicId()`: Membuat paket dan ID publik.",
            "`MediaPackageRepository::updatePrice()`: Menetapkan harga.",
            "`UPDATE media_files`: Menautkan file media ke paket."
          ]
        },
        {
          "step": 4.2,
          "name": "Backup Media",
          "description": "Menyalin semua file media ke channel penyimpanan dan memperbarui lokasinya di `media_files`."
        },
        {
          "step": 4.3,
          "name": "Konfirmasi Akhir",
          "description": "Pesan konfirmasi asli diedit menjadi pesan sukses yang berisi ID paket yang baru dibuat."
        }
      ]
    }
  ]
}
