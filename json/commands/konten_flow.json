{
  "flow_name": "/konten",
  "summary": "Menampilkan detail, statistik, dan opsi untuk sebuah paket konten.",
  "description": "Dipanggil dengan format `/konten <ID_PUBLIK>`, perintah ini menampilkan informasi yang sangat kontekstual tergantung pada peran pengguna (penjual, pembeli, atau pengunjung).",
  "handler": "`KontenCommand.php`",
  "steps": [
    {
      "step": 1,
      "name": "Validasi & Inisialisasi",
      "actions": [
        "Memastikan perintah memiliki parameter kedua (`<ID_PUBLIK>`).",
        "Menginisialisasi `MediaPackageRepository`, `SaleRepository`, dan `FeatureChannelRepository`.",
        "Memanggil `MediaPackageRepository::findByPublicId()` untuk mengambil data paket. Jika tidak ditemukan, kirim error dan berhenti."
      ]
    },
    {
      "step": 2,
      "name": "Pembuatan Ringkasan Media & Deskripsi",
      "actions": [
        "Memanggil `MediaPackageRepository::getFilesByPackageId()` untuk mendapatkan detail semua file media.",
        "Memanggil metode privat `generateMediaSummary()` untuk membuat string ringkasan (misal: `[1P 2V 24.5MB]`).",
        "Menggabungkan ringkasan media dengan deskripsi utama paket."
      ]
    },
    {
      "step": 3,
      "name": "Logika Tampilan Berdasarkan Peran",
      "description": "Menentukan caption dan tombol yang akan ditampilkan berdasarkan hubungan pengguna dengan paket.",
      "scenarios": [
        {
          "scenario_name": "Pengguna adalah Penjual",
          "actions": [
            "Memanggil `handleSellerView()` untuk membuat laporan konten dan tombol terkait, termasuk tombol `Promosikan Konten`.",
            "Jika terjadi kesalahan dalam pembuatan laporan, hentikan eksekusi."
          ]
        },
        {
          "scenario_name": "Pengguna Sudah Membeli atau adalah Admin",
          "actions": [
            "Memeriksa `SaleRepository::hasUserPurchased()`, `SubscriptionRepository::hasActiveSubscription()` dan peran pengguna.",
            "Memanggil `handlePurchasedOrAdminView()` untuk menyiapkan tombol `Lihat Selengkapnya`."
          ]
        },
        {
          "scenario_name": "Pengunjung Biasa",
          "actions": [
            "Memanggil `handleVisitorView()` untuk menyiapkan tombol `Beli`, `Hadiahkan`, `Tanya Penjual`, dan `Langganan` (jika tersedia).",
            "Jika status paket tidak `available` (misal: `sold`, `retracted`, `pending`, `deleted`), mengirim pesan informatif kepada pengguna tentang status konten dan menghentikan eksekusi."
          ]
        }
      ]
    },
    {
      "step": 4,
      "name": "Pengiriman Respons Final",
      "actions": [
        "Memanggil `MediaPackageRepository::getThumbnailFile()` yang memiliki logika fallback (jika thumbnail utama tidak valid, cari file valid pertama).",
        "Jika tidak ada thumbnail yang valid sama sekali, kirim pesan error dan catat di log.",
        "Memanggil `TelegramAPI::copyMessage()` untuk mengirim thumbnail dengan caption dan tombol yang sudah disiapkan."
      ]
    }
  ]
}