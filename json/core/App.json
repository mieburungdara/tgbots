{
  "class_name": "App",
  "summary": "Wadah dependensi dan service locator utama aplikasi.",
  "description": "Kelas `App` berfungsi sebagai pusat kontrol aplikasi. Ia memegang konfigurasi, menginisialisasi koneksi database, dan menyediakan akses ke berbagai komponen sistem (seperti data bot, pengguna, dan API Telegram) melalui mekanisme lazy loading untuk efisiensi. Aplikasi ini sekarang sepenuhnya mengandalkan autoloader Composer untuk manajemen dependensi dan pemuatan kelas.",
  "properties": [
    {
      "name": "config",
      "description": "Menyimpan seluruh konfigurasi aplikasi yang dimuat dari `config.php`."
    },
    {
      "name": "db",
      "description": "Instance koneksi database (PDO) yang di-lazy load."
    },
    {
      "name": "bot",
      "description": "Data bot yang sedang aktif, di-lazy load dari `BotRepository` berdasarkan token yang diterima."
    },
    {
      "name": "user",
      "description": "Data pengguna yang berinteraksi dengan bot, di-lazy load dari `UserRepository`."
    },
    {
      "name": "telegram",
      "description": "Instance dari kelas `TelegramAPI` untuk berinteraksi dengan Telegram, di-lazy load."
    }
  ],
  "methods": [
    {
      "name": "__construct",
      "description": "Menginisialisasi aplikasi dengan menyimpan array konfigurasi. Tidak ada proses berat yang terjadi di sini; komponen lain akan dimuat saat dibutuhkan (lazy loading).",
      "parameters": [
        {
          "name": "config",
          "type": "array",
          "description": "Array asosiatif berisi konfigurasi aplikasi."
        }
      ]
    },
    {
      "name": "__get",
      "description": "Magic method yang menangani pemanggilan properti yang tidak terdefinisi. Ini digunakan untuk mengimplementasikan lazy loading: komponen seperti koneksi database atau data pengguna hanya akan diinisialisasi saat pertama kali diakses.",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "description": "Nama komponen yang diminta (misalnya, 'db', 'user', 'bot')."
        }
      ],
      "returns": "mixed",
      "return_description": "Mengembalikan instance dari komponen yang diminta. Akan melempar Exception jika komponen tidak valid."
    }
  ]
}